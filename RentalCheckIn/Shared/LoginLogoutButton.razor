
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using RentalCheckIn.Services.UI
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthStateProvider

<AuthorizeView>
    <Authorized>
        <a href="logout" @onclick="Logout" class="btn btn-danger">Logout</a>
    </Authorized>
    <NotAuthorized>
        <button @onclick="Login" class="btn btn-primary">Login</button>
    </NotAuthorized>
</AuthorizeView>

@code {
    [Inject]
    private ProtectedLocalStorage LocalStorage { get; set; }

    void Login()
    {
        NavigationManager.NavigateTo("login");
    }

    async Task Logout()
    {
        await LocalStorage.DeleteAsync("token");
        Constants.JWTToken = "";
        await AuthStateProvider.GetAuthenticationStateAsync();
    }

}
