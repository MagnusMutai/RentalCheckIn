@page "/register"
@inject NavigationManager NavigationManager

<h3>Register</h3>

@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <div class="alert alert-danger">@ErrorMessage</div>
}
@if (!string.IsNullOrEmpty(SuccessMessage))
{
    <div class="alert alert-success">@SuccessMessage</div>
}

@if (string.IsNullOrEmpty(TotpSecret))
{
    <EditForm Model="registerModel" OnValidSubmit="HandleRegister">
        <DataAnnotationsValidator />

        <InputText @bind-Value="registerModel.FirstName" placeholder="FirstName" />
        <ValidationMessage For="@(() => registerModel.FirstName)" />
        <InputText @bind-Value="registerModel.LastName" placeholder="LastName" />
        <ValidationMessage For="@(() => registerModel.LastName)" />
        <InputText @bind-Value="registerModel.Email" placeholder="Email" />
        <ValidationMessage For="@(() => registerModel.Email)" />
        <InputText @bind-Value="registerModel.Password" placeholder="Password" type="password" />
        <ValidationMessage For="@(() => registerModel.Password)" />
        <InputText @bind-Value="registerModel.ConfirmPassword" placeholder="Confirm Password" type="password" />
        <ValidationMessage For="@(() => registerModel.ConfirmPassword)" />
        <button type="submit">Register</button>
    </EditForm>
}
else
{
    <p>Please add the following secret to your authenticator app:</p>
    <p><strong>@TotpSecret</strong></p>
    <p>After adding, proceed to <a href="/login">Login</a>.</p>
}

@code {
    private HostSignUpDto registerModel = new();
    private string ErrorMessage;
    private string SuccessMessage;
    private string TotpSecret;
    [Inject]
    private IAuthService AuthService { get; set; }

    private async Task HandleRegister()
    {
        var result = await AuthService.RegisterAsync(registerModel);

        if (result.Success)
        {
            TotpSecret = result.Host.TotpSecret;
            SuccessMessage = "You are successfully registered, check your email to confirm your account";
        }

        ErrorMessage = result.Message;
    }
}
